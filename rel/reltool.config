{sys, [
  % Defines library directories where additional applications may reside and it
  % defaults to the directories listed by the operating system environment
  % variable ERL_LIBS.
  {lib_dirs, ["../deps", "../apps"]},

  % Release specific configuration. Each release maps to a rel, script and boot
  % file. See the module systools for more info about the details. Each release
  % has a name, a version and a set of applications with a few release specific
  % parameters such as type and included applications.
  {rel, "estatsd", "0.01", [
    kernel,
    stdlib,
    sasl,
    estatsd,
    eper
  ]},

  {rel, "start_clean", "", [
    kernel,
    stdlib
  ]},

  % A target system may have several releases but the one given as boot_rel
  % will be used as default when the system is booting up.
  {boot_rel, "estatsd"},

  % The creation of the specification for a target system is performed in two
  % steps. In the first step a complete specification is generated. It will
  % likely contain much more files than you are interested in in your customized
  % target system. In the second step the specification will be filtered
  % according to your filters. There you have the ability to specify filters per
  % application as well as system wide filters. You can also select a profile
  % for your system. Depending on the profile, different default filters will be
  % used. There are three different profiles to choose from: development,
  % embedded and standalone. development is default. The parameters that are
  % affected by the profile are: incl_sys_filters, excl_sys_filters,
  % incl_app_filters and excl_app_filters.
  {profile, embedded},

  % This parameter normally contains a list of regular expressions that controls
  % which files in the system should not be included in the target system. In
  % order to be included, a file must match some filter in incl_sys_filters but
  % not any filter in excl_sys_filters. This parameter defaults to [].
  {excl_sys_filters, ["^bin/.*", "^erts.*/bin/(dialyzer|typer)"]},

  % This parameter normally contains a list of regular expressions that controls
  % which top level directories in an application should not be included in an
  % archive file. In order to be included in the application archive, a top
  % directory must match some filter in incl_archive_filters but not any filter
  % in excl_archive_filters. This parameter defaults to ["^include$","^priv$"].
  {excl_archive_filters, [".*"]},

  % Application specific configuration.
  % An application has a mandatory name and application level options that
  % are described below.
  %
  % incl_cond - This parameter controls the application and escript inclusion
  %   policy. It defaults to derived which means that the applications that do
  %   not have any explicit incl_cond setting, will only be included if any
  %   other (explicitly or implicitly included) application uses it. The value
  %   include implies that all applications and escripts that do not have any
  %   explicit incl_cond setting will be included. exclude implies that all
  %   applications and escripts) that do not have any explicit incl_cond setting
  %   will be excluded.
  {app, hipe, [{incl_cond, exclude}]},
  {app, sasl, [{incl_cond, include}]},
  {app, crypto, [{incl_cond, include}]},
  {app, inets, [{incl_cond, include}]},
  {app, estatsd, [{incl_cond, include}]},
  {app, lager, [{incl_cond, include}]},
  {app, lager_sensu_backend, [{incl_cond, include}]},
  {app, eper, [{incl_cond, include}]}
]}.

{target_dir, "estatsd"}.

{overlay_vars, "vars.config"}.

{overlay, [
  {mkdir, "log/sasl"},
  {copy, "files/erl", "\{\{erts_vsn\}\}/bin/erl"},
  {copy, "files/nodetool", "\{\{erts_vsn\}\}/bin/nodetool"},
  {copy, "files/estatsd", "bin/estatsd"},
  {template, "files/app.config", "etc/app.config"},
  {copy, "files/vm.args", "etc/vm.args"}
]}.
